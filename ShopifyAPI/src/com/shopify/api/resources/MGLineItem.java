/**
 * DO NOT MODIFY THIS CODE
 *
 * Place all of your changes in LineItem.java
 *
 * It has been machine generated from fixtures and your changes will be
 * lost if anything new needs to be added to the API.
 **/
// Last Generated: 2011-09-12T22:14:03-04:00
package com.shopify.api.resources;

import java.util.List;
import org.codehaus.jackson.annotate.JsonProperty;

/**
 * This code has been machine generated by processing the single entry
 * fixtures found from the Shopify API Documentation
 */

public class MGLineItem extends ShopifyResource {

	@JsonProperty("price")
	public String getPrice() {
		return (String)attributes.get("price");
	}
	@JsonProperty("price")
	public void setPrice(String _price) {
		attributes.put("price", _price);
	}

	@JsonProperty("name")
	public String getName() {
		return (String)attributes.get("name");
	}
	@JsonProperty("name")
	public void setName(String _name) {
		attributes.put("name", _name);
	}

	@JsonProperty("title")
	public String getTitle() {
		return (String)attributes.get("title");
	}
	@JsonProperty("title")
	public void setTitle(String _title) {
		attributes.put("title", _title);
	}

	@JsonProperty("requires_shipping")
	public boolean getRequiresShipping() {
		Boolean value = (Boolean)attributes.get("requires_shipping");
		return value != null ? value : false;
	}
	@JsonProperty("requires_shipping")
	public void setRequiresShipping(boolean _requires_shipping) {
		attributes.put("requires_shipping", _requires_shipping);
	}

	@JsonProperty("quantity")
	public int getQuantity() {
		Integer value = (Integer)attributes.get("quantity");
		return value != null ? value : 0;
	}
	@JsonProperty("quantity")
	public void setQuantity(int _quantity) {
		attributes.put("quantity", _quantity);
	}

	@JsonProperty("product_id")
	public int getProductId() {
		Integer value = (Integer)attributes.get("product_id");
		return value != null ? value : 0;
	}
	@JsonProperty("product_id")
	public void setProductId(int _product_id) {
		attributes.put("product_id", _product_id);
	}

	@JsonProperty("grams")
	public int getGrams() {
		Integer value = (Integer)attributes.get("grams");
		return value != null ? value : 0;
	}
	@JsonProperty("grams")
	public void setGrams(int _grams) {
		attributes.put("grams", _grams);
	}

	@JsonProperty("sku")
	public String getSku() {
		return (String)attributes.get("sku");
	}
	@JsonProperty("sku")
	public void setSku(String _sku) {
		attributes.put("sku", _sku);
	}

	@JsonProperty("vendor")
	public String getVendor() {
		return (String)attributes.get("vendor");
	}
	@JsonProperty("vendor")
	public void setVendor(String _vendor) {
		attributes.put("vendor", _vendor);
	}

	@JsonProperty("variant_title")
	public String getVariantTitle() {
		return (String)attributes.get("variant_title");
	}
	@JsonProperty("variant_title")
	public void setVariantTitle(String _variant_title) {
		attributes.put("variant_title", _variant_title);
	}

	@JsonProperty("fulfillment_status")
	public String getFulfillmentStatus() {
		return (String)attributes.get("fulfillment_status");
	}
	@JsonProperty("fulfillment_status")
	public void setFulfillmentStatus(String _fulfillment_status) {
		attributes.put("fulfillment_status", _fulfillment_status);
	}

	@JsonProperty("fulfillment_service")
	public String getFulfillmentService() {
		return (String)attributes.get("fulfillment_service");
	}
	@JsonProperty("fulfillment_service")
	public void setFulfillmentService(String _fulfillment_service) {
		attributes.put("fulfillment_service", _fulfillment_service);
	}

	@JsonProperty("variant_id")
	public int getVariantId() {
		Integer value = (Integer)attributes.get("variant_id");
		return value != null ? value : 0;
	}
	@JsonProperty("variant_id")
	public void setVariantId(int _variant_id) {
		attributes.put("variant_id", _variant_id);
	}

}
